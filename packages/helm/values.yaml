gui:
  listenPort: 8080
  # -- YAML GUI configuration
  config: |
    security:
      auth:
        anonymous:
          enabled: true

      rbac:
        enabled: true
        items:
        - entity: anonymous
          rules:
          - list
          - read
          - write
          - delete
          buckets:
          - host: "*"
            name: "*"

    storage:
      auth:
      - name: root
        basic:
          accessKey: ${MY_S3_ACCESS_KEY}
          secretKey: ${MY_S3_SECRET_KEY}

      endpoints:
      - name: minio
        host: minio
        port: 9000
        protocol: http

      buckets:
      - endpoint: minio
        region: us-east-1
        name: gui
        auth: root

      - endpoint: minio
        region: us-east-1
        name: test1
        auth: root

# -- number of Deployment pods
replicaCount: 1

image:
  repository: ghcr.io/datatok/gui
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- extra pod labels
podLabels: {}

# -- pod annotations
podAnnotations: {}

# -- pod security context
podSecurityContext: {}
  # fsGroup: 2000

# -- extra env, to mount secrets (see https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables)
extraEnvs: #[]
- name: MY_S3_ACCESS_KEY
  valueFrom:
    secretKeyRef:
      name: mysecret
      key: ACCESS_KEY
- name: MY_S3_SECRET_KEY
  valueFrom:
    secretKeyRef:
      name: mysecret
      key: SECRET_KEY
- name: MY_S3_BUCKET
  valueFrom:
    configMapKeyRef:
      name: special-config
      key: special.how

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

networkPolicy:
  # -- enabled network policy for ingress and egress
  enabled: false

  # -- egress rules
  egress: []

nodeSelector: {}

tolerations: []

affinity: {}
